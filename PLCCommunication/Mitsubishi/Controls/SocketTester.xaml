<UserControl x:Class="PLCCommunication.Mitsubishi.Controls.SocketTester"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:PLCCommunication.Mitsubishi.Controls"
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             xmlns:mit="clr-namespace:PLCCommunication.Mitsubishi"
             mc:Ignorable="d" 
             x:Name="uc" IsVisibleChanged="Tester_IsVisibleChanged">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <local:BoolToRadioButtonConverter x:Key="BoolToRadioButtonConverter"/>
        <local:BoolToGreenRedColorConverter x:Key="BoolToGreenRedColorConverter"/>
        <ObjectDataProvider x:Key="DeviceCodeFromEnum" MethodName="GetValues"
                            ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="mit:EPLCDeviceCode"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="DataTypeFromEnum" MethodName="GetValues"
                            ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="local:EParseDataType"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
    </UserControl.Resources>
    <ScrollViewer Background="#162432" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
        <Grid MinWidth="850">
            <Grid.Style>
                <Style>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsConnected}" Value="False">
                            <Setter Property="Grid.MinHeight" Value="{Binding ElementName=conn_Grid, Path=ActualHeight}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsConnected}" Value="True">
                            <Setter Property="Grid.MinHeight" Value="800"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid Name="conn_Grid" Margin="5" VerticalAlignment="Top" Background="#FFBCC7D8">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <TextBlock Padding="2" TextWrapping="Wrap" Text="Connection" VerticalAlignment="Top" Background="#FF496184" Foreground="White" FontWeight="Bold"/>
                <Grid Grid.Row="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="3*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="IP" FontWeight="Bold" Grid.Row="0" Grid.Column="0" Margin="5"/>
                    <TextBox Grid.Row="1" Grid.Column="0" Margin="5" TextWrapping="Wrap" Text="{Binding IP, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center"/>
                    <TextBlock Text="Port" FontWeight="Bold" Grid.Row="0" Grid.Column="1" Margin="5"/>
                    <TextBox  Grid.Row="1" Grid.Column="1" Margin="5" TextWrapping="Wrap" Text="{Binding Port, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center"/>
                    <TextBlock Name="protocol_tb" Text="Protocol Format" FontWeight="Bold" Grid.Row="0" Grid.Column="2" Margin="5"/>
                    <UniformGrid Grid.Row="1" Grid.Column="2" Columns="2">
                        <RadioButton Content="Binary" Margin="5" VerticalAlignment="Center" IsChecked="{Binding IsBinary}"/>
                        <RadioButton Content="ASCII" Margin="5" VerticalAlignment="Center" IsChecked="{Binding IsBinary, Converter={StaticResource BoolToRadioButtonConverter}}"/>
                    </UniformGrid>
                    <UniformGrid Grid.RowSpan="2" Grid.Column="3" Rows="2" Columns="2">
                        <TextBlock Text="Network No." FontWeight="Bold" Margin="5"/>
                        <TextBlock Text="PC No." FontWeight="Bold" Margin="5"/>
                        <TextBox Margin="5" TextWrapping="Wrap" Text="{Binding NetworkNo}"/>
                        <TextBox Margin="5" TextWrapping="Wrap" Text="{Binding PCNo}"/>
                    </UniformGrid>
                    <Rectangle Grid.Row="0" Grid.Column="4" Margin="5" Stroke="#FF496184">
                        <Rectangle.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsConnected}" Value="True">
                                        <Setter Property="Rectangle.Fill" Value="LawnGreen"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsConnected}" Value="False">
                                        <Setter Property="Rectangle.Fill" Value="Red"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Rectangle.Style>
                    </Rectangle>
                    <Button Grid.Row="1" Grid.Column="4" Margin="5" Click="Connect_button_Click" Background="#FF496184" Foreground="White" BorderBrush="#FF496184">
                        <Button.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsConnected}" Value="True">
                                        <Setter Property="Button.Content" Value="Disconnect"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsConnected}" Value="False">
                                        <Setter Property="Button.Content" Value="Connect"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </Grid>
            </Grid>
            <Border Grid.Row="1" BorderBrush="#FFB7B7C0" BorderThickness="3" Margin="5" Visibility="{Binding IsConnected, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid Margin="5" Background="#FFBCC7D8">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <TextBlock Padding="2" TextWrapping="Wrap" Text=" Write" Background="#FF496184" Foreground="White" FontWeight="Bold"/>

                        <Grid Grid.Row="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="100"/>
                            </Grid.ColumnDefinitions>
                            <Grid Grid.Column="1">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="20"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="50"/>
                                    <RowDefinition Height="50"/>
                                    <RowDefinition Height="80"/>
                                </Grid.RowDefinitions>
                                <Viewbox HorizontalAlignment="Left" VerticalAlignment="Bottom">
                                    <TextBlock Text="Separate Char." FontWeight="Bold" Margin="5"/>
                                </Viewbox>
                                <ComboBox Grid.Row="1" VerticalAlignment="Top" Margin="5,0" SelectedIndex="{Binding SelectedSeparateCharIndex}">
                                    <ComboBoxItem Selector.IsSelected="True">Space (' ')</ComboBoxItem>
                                    <ComboBoxItem>Hyphen ('-')</ComboBoxItem>
                                    <ComboBoxItem>Comma (',')</ComboBoxItem>
                                    <ComboBoxItem>Underscore ('_')</ComboBoxItem>
                                </ComboBox>
                                <Button Grid.Row="2" Margin="5" Content="New" Click="NewWriteCommand_button_Click" Background="#FF496184" BorderBrush="#FF496184" Foreground="White"/>
                                <Button Grid.Row="3" Margin="5" Content="Delete" Click="DeleteWriteCommand_Button_Click" Background="#FF496184" BorderBrush="#FF496184" Foreground="White"/>
                                <Button Grid.Row="4" Margin="5" Content="Write" Click="Write_button_Click" Background="#FF496184" BorderBrush="#FF496184" Foreground="White"/>
                            </Grid>
                            <DataGrid x:Name="write_dataGrid" Margin="5" AutoGenerateColumns="False" ItemsSource="{Binding WriteCommandList}" CanUserAddRows="False" CanUserDeleteRows="False" MinColumnWidth="80">
                                <DataGrid.Columns>
                                    <DataGridTemplateColumn Header="Device Code">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <ComboBox ItemsSource="{Binding Source={StaticResource DeviceCodeFromEnum}}"
                                          SelectedItem="{Binding DeviceCode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTemplateColumn Header="Device Number">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBox>
                                                    <TextBox.Style>
                                                        <Style>
                                                            <Setter Property="TextBox.Text" Value="{Binding DeviceNumber, UpdateSourceTrigger=PropertyChanged}"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding DeviceCode}" Value="X">
                                                                    <Setter Property="TextBox.Text" Value="{Binding DeviceHexNumber, UpdateSourceTrigger=PropertyChanged}"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding DeviceCode}" Value="Y">
                                                                    <Setter Property="TextBox.Text" Value="{Binding DeviceHexNumber, UpdateSourceTrigger=PropertyChanged}"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding DeviceCode}" Value="B">
                                                                    <Setter Property="TextBox.Text" Value="{Binding DeviceHexNumber, UpdateSourceTrigger=PropertyChanged}"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding DeviceCode}" Value="SB">
                                                                    <Setter Property="TextBox.Text" Value="{Binding DeviceHexNumber, UpdateSourceTrigger=PropertyChanged}"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding DeviceCode}" Value="DX">
                                                                    <Setter Property="TextBox.Text" Value="{Binding DeviceHexNumber, UpdateSourceTrigger=PropertyChanged}"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding DeviceCode}" Value="DY">
                                                                    <Setter Property="TextBox.Text" Value="{Binding DeviceHexNumber, UpdateSourceTrigger=PropertyChanged}"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBox.Style>
                                                </TextBox>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTemplateColumn Header="Data Type">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <ComboBox ItemsSource="{Binding Source={StaticResource DataTypeFromEnum}}"
                                          SelectedItem="{Binding DataType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTemplateColumn Header="Values">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBox Text="{Binding Value, UpdateSourceTrigger=PropertyChanged}"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                </DataGrid.Columns>
                            </DataGrid>
                        </Grid>
                    </Grid>
                    <Grid Margin="5" Background="#FFBCC7D8" Grid.Row="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <TextBlock Padding="2" TextWrapping="Wrap" Text="Read" VerticalAlignment="Top" Background="#FF496184" Foreground="White" FontWeight="Bold"/>
                        <Grid Grid.Row="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="2*"/>
                                <ColumnDefinition Width="100"/>
                                <ColumnDefinition Width="3*"/>
                            </Grid.ColumnDefinitions>
                            <DataGrid Name="read_dataGrid" Margin="5" AutoGenerateColumns="False" ItemsSource="{Binding ReadCommandList}" CanUserAddRows="False" CanUserDeleteRows="False" MinColumnWidth="80">
                                <DataGrid.Columns>
                                    <DataGridTemplateColumn Header="Device Code">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <ComboBox ItemsSource="{Binding Source={StaticResource DeviceCodeFromEnum}}"
                                            SelectedItem="{Binding DeviceCode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTemplateColumn Header="Device Number">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBox>
                                                    <TextBox.Style>
                                                        <Style>
                                                            <Setter Property="TextBox.Text" Value="{Binding DeviceNumber, UpdateSourceTrigger=PropertyChanged}"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding DeviceCode}" Value="X">
                                                                    <Setter Property="TextBox.Text" Value="{Binding DeviceHexNumber, UpdateSourceTrigger=PropertyChanged}"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding DeviceCode}" Value="Y">
                                                                    <Setter Property="TextBox.Text" Value="{Binding DeviceHexNumber, UpdateSourceTrigger=PropertyChanged}"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding DeviceCode}" Value="B">
                                                                    <Setter Property="TextBox.Text" Value="{Binding DeviceHexNumber, UpdateSourceTrigger=PropertyChanged}"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding DeviceCode}" Value="SB">
                                                                    <Setter Property="TextBox.Text" Value="{Binding DeviceHexNumber, UpdateSourceTrigger=PropertyChanged}"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding DeviceCode}" Value="DX">
                                                                    <Setter Property="TextBox.Text" Value="{Binding DeviceHexNumber, UpdateSourceTrigger=PropertyChanged}"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding DeviceCode}" Value="DY">
                                                                    <Setter Property="TextBox.Text" Value="{Binding DeviceHexNumber, UpdateSourceTrigger=PropertyChanged}"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBox.Style>
                                                </TextBox>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTemplateColumn Header="Words To Read">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBox Text="{Binding WordCount, UpdateSourceTrigger=PropertyChanged}"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                </DataGrid.Columns>
                            </DataGrid>

                            <Grid Grid.Column="1">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="50"/>
                                    <RowDefinition Height="50"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="20"/>
                                    <RowDefinition Height="80"/>
                                </Grid.RowDefinitions>
                                <Button Grid.Row="0" Margin="5" Content="New" Click="NewReadCommand_button_Click" Background="#FF496184" BorderBrush="#FF496184" Foreground="White"/>
                                <Button Grid.Row="1" Margin="5" Content="Delete" Click="DeleteReadCommand_Button_Click" Background="#FF496184" BorderBrush="#FF496184" Foreground="White"/>
                                <Grid Grid.Row="2" VerticalAlignment="Bottom">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Text="RESULT" HorizontalAlignment="Center" FontWeight="Bold"/>
                                    <Viewbox Grid.Row="1" Margin="15" HorizontalAlignment="Center">
                                        <Polygon FillRule="EvenOdd" Fill="#FF496184" Stroke="#87C0EE" StrokeThickness="5" Points="0,43 0,78 80,78 60,110 98,110 130,60 98,10 60,10 80,43"/>
                                    </Viewbox>
                                </Grid>
                                <Button Grid.Row="4" Margin="5" Content="Read" Click="Read_button_Click" Background="#FF496184" BorderBrush="#FF496184" Foreground="White"/>
                            </Grid>
                            <DataGrid Margin="5" AutoGenerateColumns="False" ItemsSource="{Binding ResultList}" CanUserAddRows="False" CanUserDeleteRows="False" Grid.Column="3" MinColumnWidth="80">
                                <DataGrid.Columns>
                                    <DataGridTemplateColumn Header="Device Code">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding DeviceCode, Mode=OneTime}"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTemplateColumn Header="Device Number">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock>
                                                    <TextBlock.Style>
                                                        <Style>
                                                            <Setter Property="TextBlock.Text" Value="{Binding DeviceNumber, UpdateSourceTrigger=PropertyChanged}"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding DeviceCode}" Value="X">
                                                                    <Setter Property="TextBlock.Text" Value="{Binding DeviceHexNumber, UpdateSourceTrigger=PropertyChanged}"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding DeviceCode}" Value="Y">
                                                                    <Setter Property="TextBlock.Text" Value="{Binding DeviceHexNumber, UpdateSourceTrigger=PropertyChanged}"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding DeviceCode}" Value="B">
                                                                    <Setter Property="TextBlock.Text" Value="{Binding DeviceHexNumber, UpdateSourceTrigger=PropertyChanged}"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding DeviceCode}" Value="SB">
                                                                    <Setter Property="TextBlock.Text" Value="{Binding DeviceHexNumber, UpdateSourceTrigger=PropertyChanged}"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding DeviceCode}" Value="DX">
                                                                    <Setter Property="TextBlock.Text" Value="{Binding DeviceHexNumber, UpdateSourceTrigger=PropertyChanged}"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding DeviceCode}" Value="DY">
                                                                    <Setter Property="TextBlock.Text" Value="{Binding DeviceHexNumber, UpdateSourceTrigger=PropertyChanged}"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTemplateColumn Header="Data Type">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <ComboBox ItemsSource="{Binding Source={StaticResource DataTypeFromEnum}}"
                                                SelectedItem="{Binding DataType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTemplateColumn Header="Values">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBox Text="{Binding ResultText, Mode=OneWay}" IsReadOnly="True"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                </DataGrid.Columns>
                            </DataGrid>
                        </Grid>
                    </Grid>
                </Grid>
            </Border>
        </Grid>
    </ScrollViewer>
</UserControl>
